{"version":3,"sources":["components/Header.js","components/TopControls.js","components/Main3DView.js","components/PhoneSelection.js","components/TextEngraving.js","components/CaseColourPicker.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","href","TopControls","props","onClick","onResetApp","onChange","on3DFormatSelect","value","chosen_3d_format","export_3d_formats","map","format","key","Main3DView","app_states","chosen_phone_model","chosen_engraved_text","chosen_case_colour","chosen_export_3d_format","PhoneSelection","phone_makes","make_button","style","backgroundImage","concat","onPhoneMakeSelect","size","onPhoneModelSelect","chosen_model_list","phone","TextEngraving","htmlFor","id","onEngraveTextChange","engraved","placeholder","CaseColourPicker","phone_case_colours","case_colour","backgroundColor","onCaseColourSelect","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","available_case_colours","available_phone_OS","available_AppleiOS_phone_models","available_Android_phone_models","available_export_3d_formats","displyed_phone_models","update3DExportFormat","bind","assertThisInitialized","resetApp","updatePhoneModelSelect","updateDisplayedPhoneModels","updateEngravingText","updateCaseColour","e","setState","target","components_Header","components_TopControls","components_Main3DView","components_PhoneSelection","components_TextEngraving","components_CaseColourPicker","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2b4d804f.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n    return (\n        <div className=\"header-flex\">\n            <div>\n                <img src=\"images/logo_white.png\" alt=\"Inkerz Logo\"></img>\n            </div>\n            <div className=\"nav\">\n                <a href=\"index.html\">3D MODELER</a>\n                <a href=\"index.html\">WHY INKERZ?</a>\n                <a href=\"index.html\">CONTACT</a>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Header","import React from 'react';\n\nfunction TopControls(props) {\n    return (\n        <div className=\"top-controls\">\n            <div className=\"top-controls-flex\">\n                <div>\n                    <button className=\"button-3d\">Load 3D Model</button>\n                    <button className=\"button-3d\" onClick={props.onResetApp}>Reset</button>\n                </div>\n                <div>\n                    <select className=\"select-3d\" onChange={props.on3DFormatSelect} value={props.chosen_3d_format}>\n                        <option value=\"\">Select Format</option>\n                        {props.export_3d_formats.map((format) => (\n                            <option key={format} value={format} >.{format}</option>\n                        ))}\n                    </select>\n                    <button className=\"button-3d\">Export 3D Model</button>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default TopControls","import React from 'react';\n\nfunction Main3DView(props) {\n    return (\n        <div>\n            <p>Integrate Three.js Viewer TBA!</p>\n            <p>Application State Checker (Troubleshooting/Remove in Final!)</p>\n            <p>Chosen Phone Model: {props.app_states.chosen_phone_model}</p>\n            <p>Chosen Engraved Text: {props.app_states.chosen_engraved_text}</p>\n            <p>Chosen Case Colour: {props.app_states.chosen_case_colour}</p>\n            <p>Chosen Save 3D Format: {props.app_states.chosen_export_3d_format}</p>\n\n        </div>\n    )\n\n}\n\nexport default Main3DView","import React from 'react';\n\nfunction PhoneSelection(props) {\n    return (\n        <div>\n            <div className=\"aside\">\n                <p>Phone Operating System:</p>\n                {props.phone_makes.map((make_button) => (\n                    <button\n                        key={make_button}\n                        style={{\n                            backgroundImage: `url(../../images/${make_button}.png)`\n                        }}\n                        value={make_button}\n                        className=\"button-phone-make\"\n                        onClick={props.onPhoneMakeSelect} >\n                    </button>\n                ))}\n            </div>\n            <div>\n                <p>Phone Model:</p>\n                <select size=\"5\" onChange={props.onPhoneModelSelect}>\n                    {props.chosen_model_list.map((phone) => (\n                        <option key={phone} value={phone} >{phone}</option>\n                    ))}\n                </select>\n            </div>\n        </div>\n    )\n\n}\n\nexport default PhoneSelection","import React from 'react';\n\nfunction TextEngraving(props) {\n    return (\n        <div>\n            <div>\n                <label htmlFor=\"text-to-engrave\">\n                    <p>What to engrave into case?</p>\n                </label>\n                <input\n                    id=\"text-to-engrave\"\n                    onChange={props.onEngraveTextChange}\n                    value={props.engraved} placeholder=\"Text to Engrave\"\n                />\n            </div>\n        </div>\n    )\n\n}\n\nexport default TextEngraving","import React from 'react';\n\nfunction CaseColourPicker(props) {\n    return (\n        <div>\n            <p>Pick Case Colour:</p>\n            {props.phone_case_colours.map((case_colour) => (\n                <button\n                    key={case_colour}\n                    style={{\n                        backgroundColor: case_colour\n                    }}\n                    value={case_colour}\n                    className=\"button-phone-case-colour\"\n                    onClick={props.onCaseColourSelect} >\n                </button>\n            ))}\n        </div>\n    )\n\n}\n\nexport default CaseColourPicker","import React, { Component } from 'react';\nimport Header from './components/Header'\nimport TopControls from './components/TopControls'\nimport Main3DView from './components/Main3DView'\nimport PhoneSelection from './components/PhoneSelection'\nimport TextEngraving from './components/TextEngraving'\nimport CaseColourPicker from './components/CaseColourPicker'\n// import AppStateCheck from './components/AppStateCheck'\n\nclass App extends Component {\n  /* Constructor */\n  constructor(props) {\n    super(props)\n\n    /* App state*/\n    this.state = {\n      chosen_phone_model: '',\n      chosen_engraved_text: '',\n      chosen_case_colour: '',\n      chosen_export_3d_format: '',\n      available_case_colours: ['Red', 'Blue', 'Green', 'Orange', 'Teal', 'Black', '#ffd24d', '#8585ad', 'Brown'],\n      available_phone_OS: ['AppleiOS', 'Android'],\n      available_AppleiOS_phone_models: ['iPhone6', 'iPad2'],\n      available_Android_phone_models: ['GalaxyS9', 'GooglePixel2XL'],\n      available_export_3d_formats: ['STL', 'OBJ', 'AFM', '3FM'],\n      displyed_phone_models: ['Please', 'Choose', 'Phone', 'OS', 'First']\n    }\n\n    /* section to bind functions to local class context */\n    this.update3DExportFormat = this.update3DExportFormat.bind(this)\n    this.resetApp = this.resetApp.bind(this)\n    this.updatePhoneModelSelect = this.updatePhoneModelSelect.bind(this)\n    this.updateDisplayedPhoneModels = this.updateDisplayedPhoneModels.bind(this)\n    this.updateEngravingText = this.updateEngravingText.bind(this)\n    this.updateCaseColour = this.updateCaseColour.bind(this)\n\n  }\n  /* Updates chosen_export_3d_format App state property based on return \n  event target value*/\n  update3DExportFormat(e) {\n    this.setState({ chosen_export_3d_format: e.target.value })\n  }\n  /* Resets App to chosen default values (empty) */\n  resetApp() {\n    this.setState({\n      chosen_phone_model: '',\n      chosen_engraved_text: '',\n      chosen_case_colour: '',\n      chosen_export_3d_format: '',\n      displyed_phone_models: ['Choose', 'Phone', 'Make', 'Above']\n    })\n  }\n\n  updatePhoneModelSelect(e) {\n    this.setState({ chosen_phone_model: e.target.value })\n\n  }\n  /* NEED to FIGURE OUT HOW TO USE E TARGET as array name\n  to be able to move arrays into state!!!!!!!*/\n  updateDisplayedPhoneModels(e) {\n    var target = e.target.value\n\n    if (target === \"AppleiOS\") {\n      this.setState({ displyed_phone_models: this.state.available_AppleiOS_phone_models })\n    }\n\n    if (target === \"Android\") {\n      this.setState({ displyed_phone_models: this.state.available_Android_phone_models })\n    }\n\n  }\n\n  updateEngravingText(e) {\n    this.setState({ chosen_engraved_text: e.target.value })\n  }\n\n  updateCaseColour(e) {\n    this.setState({ chosen_case_colour: e.target.value })\n  }\n\n  /* App JSX render section */\n  render() {\n    return (\n      <div className=\"container\" >\n        <header>\n          <Header />\n        </header>\n        <TopControls\n          export_3d_formats={this.state.available_export_3d_formats}\n          chosen_3d_format={this.state.chosen_export_3d_format}\n          on3DFormatSelect={this.update3DExportFormat}\n          onResetApp={this.resetApp}\n        />\n        <main>\n          <Main3DView app_states={this.state} />\n        </main>\n        <aside>\n          <PhoneSelection\n            phone_makes={this.state.available_phone_OS}\n            chosen_model_list={this.state.displyed_phone_models}\n            onPhoneMakeSelect={this.updateDisplayedPhoneModels}\n            onPhoneModelSelect={this.updatePhoneModelSelect}\n          />\n          <TextEngraving\n            engraved={this.state.chosen_engraved_text}\n            onEngraveTextChange={this.updateEngravingText}\n          />\n          <CaseColourPicker\n            phone_case_colours={this.state.available_case_colours}\n            onCaseColourSelect={this.updateCaseColour}\n          />\n        </aside>\n        {/* !!! Remove AppStateCheck in final version !!! */}\n        {/* <AppStateCheck app_states={this.state} /> */}\n      </div>\n    );\n  }\n}\n\n/* Export App */\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}